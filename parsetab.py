
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '4\xed*\xd0\x01F\x8a\xa5H\xc4C\xd8hvY\xc7'
    
_lr_action_items = {'OROR':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,26,-18,26,26,26,-23,26,26,-24,-25,-26,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,26,]),'RETURN':([0,13,21,45,70,71,74,],[1,1,-4,1,-9,1,-3,]),'NUMBER':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,44,45,59,70,71,74,],[6,6,6,6,6,6,6,6,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-9,6,-3,]),'TRUE':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,44,45,59,70,71,74,],[2,2,2,2,2,2,2,2,-4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-9,2,-3,]),'MINUS':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,36,-18,36,36,36,-23,36,36,-24,36,36,36,-35,36,-34,36,36,-32,36,-33,-36,36,]),'STRING':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,44,45,59,70,71,74,],[5,5,5,5,5,5,5,5,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-9,5,-3,]),'LE':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,33,-18,33,33,33,-23,33,33,-24,33,33,-29,-35,-31,-34,-28,-30,-32,33,-33,-36,33,]),'RPAREN':([2,5,6,12,16,19,22,37,39,40,41,42,43,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,67,73,],[-21,-20,-19,-22,-18,-37,43,-23,58,-38,-40,-6,-24,-25,-26,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,-5,-8,69,-39,-7,]),'SEMICOLON':([2,3,5,6,7,12,14,16,17,37,38,43,46,47,48,49,50,51,52,53,54,55,56,57,58,63,65,70,72,],[-21,-18,-20,-19,21,-22,-17,-18,-15,-23,-14,-24,-12,-25,-26,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,-16,71,-9,-13,]),'LT':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,32,-18,32,32,32,-23,32,32,-24,32,32,-29,-35,-31,-34,-28,-30,-32,32,-33,-36,32,]),'PLUS':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,34,-18,34,34,34,-23,34,34,-24,34,34,34,-35,34,-34,34,34,-32,34,-33,-36,34,]),'COMMA':([2,5,6,12,16,37,41,43,47,48,49,50,51,52,53,54,55,56,57,58,61,],[-21,-20,-19,-22,-18,-23,59,-24,-25,-26,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,68,]),'EQUALEQUAL':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,35,-18,35,35,35,-23,35,35,-24,35,35,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,35,]),'IDENTIFIER':([0,1,4,8,9,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,42,44,45,59,68,70,71,74,],[3,16,20,16,23,16,3,16,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,61,16,3,16,61,-9,3,-3,]),'$end':([0,10,13,21,25,70,74,],[-2,0,-2,-4,-1,-9,-3,]),'FUNCTION':([0,13,21,70,74,],[4,4,-4,-9,-3,]),'GT':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,28,-18,28,28,28,-23,28,28,-24,28,28,-29,-35,-31,-34,-28,-30,-32,28,-33,-36,28,]),'DIVIDE':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,29,-18,29,29,29,-23,29,29,-24,29,29,29,-35,29,-34,29,29,29,29,29,-36,29,]),'EQUAL':([3,23,],[18,44,]),'RBRACE':([45,64,71,75,],[-11,70,-11,-10,]),'TIMES':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,31,-18,31,31,31,-23,31,31,-24,31,31,31,-35,31,-34,31,31,31,31,31,-36,31,]),'GE':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,30,-18,30,30,30,-23,30,30,-24,30,30,-29,-35,-31,-34,-28,-30,-32,30,-33,-36,30,]),'LPAREN':([0,1,3,8,11,13,15,16,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,44,45,59,70,71,74,],[8,8,19,8,8,8,8,19,8,8,42,-4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-9,8,-3,]),'VAR':([0,13,21,45,70,71,74,],[9,9,-4,9,-9,9,-3,]),'ELSE':([46,70,],[66,-9,]),'IF':([0,13,21,45,70,71,74,],[11,11,-4,11,-9,11,-3,]),'ANDAND':([2,3,5,6,12,14,16,17,22,24,37,38,41,43,47,48,49,50,51,52,53,54,55,56,57,58,63,],[-21,-18,-20,-19,-22,27,-18,27,27,27,-23,27,27,-24,27,-26,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,27,]),'LBRACE':([2,5,6,12,16,24,37,43,47,48,49,50,51,52,53,54,55,56,57,58,66,69,],[-21,-20,-19,-22,-18,45,-23,-24,-25,-26,-29,-35,-31,-34,-28,-30,-32,-27,-33,-36,45,45,]),'FALSE':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,44,45,59,70,71,74,],[12,12,12,12,12,12,12,12,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-9,12,-3,]),'NOT':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,44,45,59,70,71,74,],[15,15,15,15,15,15,15,15,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-9,15,-3,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([45,71,],[64,75,]),'args':([19,59,],[40,67,]),'stmt':([0,13,45,71,],[7,7,65,65,]),'element':([0,13,],[13,13,]),'params':([42,68,],[60,73,]),'exp':([0,1,8,11,13,15,18,19,26,27,28,29,30,31,32,33,34,35,36,44,45,59,71,],[14,17,22,24,14,37,38,41,47,48,49,50,51,52,53,54,55,56,57,63,14,41,14,]),'js':([0,13,],[10,25,]),'optparams':([42,],[62,]),'compoundstmt':([24,66,69,],[46,72,74,]),'optargs':([19,],[39,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> js","S'",1,None,None,None),
  ('js -> element js','js',2,'p_js','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',22),
  ('js -> <empty>','js',0,'p_js_empty','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',26),
  ('element -> FUNCTION IDENTIFIER LPAREN optparams RPAREN compoundstmt','element',6,'p_element_function','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',30),
  ('element -> stmt SEMICOLON','element',2,'p_element','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',34),
  ('optparams -> params','optparams',1,'p_optparams','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',38),
  ('optparams -> <empty>','optparams',0,'p_optparams_empty','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',42),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',46),
  ('params -> IDENTIFIER','params',1,'p_params_last','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',50),
  ('compoundstmt -> LBRACE statements RBRACE','compoundstmt',3,'p_compoundstmt','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',54),
  ('statements -> stmt SEMICOLON statements','statements',3,'p_statements','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',58),
  ('statements -> <empty>','statements',0,'p_statements_last','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',62),
  ('stmt -> IF exp compoundstmt','stmt',3,'p_stmt_if','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',66),
  ('stmt -> IF exp compoundstmt ELSE compoundstmt','stmt',5,'p_stmt_if_else','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',70),
  ('stmt -> IDENTIFIER EQUAL exp','stmt',3,'p_stmt_assign','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',74),
  ('stmt -> RETURN exp','stmt',2,'p_stmt_return','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',78),
  ('stmt -> VAR IDENTIFIER EQUAL exp','stmt',4,'p_stmt_var','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',82),
  ('stmt -> exp','stmt',1,'p_stmt','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',86),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',90),
  ('exp -> NUMBER','exp',1,'p_exp_number','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',94),
  ('exp -> STRING','exp',1,'p_exp_string','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',98),
  ('exp -> TRUE','exp',1,'p_exp_true','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',102),
  ('exp -> FALSE','exp',1,'p_exp_false','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',106),
  ('exp -> NOT exp','exp',2,'p_exp_not','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',110),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parens','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',114),
  ('exp -> exp OROR exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',119),
  ('exp -> exp ANDAND exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',120),
  ('exp -> exp EQUALEQUAL exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',121),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',122),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',123),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',124),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',125),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',126),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',127),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',128),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',129),
  ('exp -> IDENTIFIER LPAREN optargs RPAREN','exp',4,'p_exp_call','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',143),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',147),
  ('optargs -> args','optargs',1,'p_optargs','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',151),
  ('args -> exp COMMA args','args',3,'p_args','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',155),
  ('args -> exp','args',1,'p_args_last','C:\\Users\\NISHANT\\Desktop\\web browser\\jsgrammar.py',159),
]
